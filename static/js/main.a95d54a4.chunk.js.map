{"version":3,"sources":["components/About/MyPic.jpg","components/Navbar/Navbar.js","components/Main/Main.js","components/About/Data.js","components/About/About.js","components/Project/Project.js","components/Portfolio/Data.js","components/Portfolio/Portfolio.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","Nav","state","className","activeClass","to","Component","Main","About","Self","Data","src","alt","href","type","class","Project","this","props","url","img","title","role","text","link","projects","id","Portfolio","map","project","key","App","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"kHAAAA,EAAOC,QAAU,IAA0B,mC,wRCoC5BC,G,iNA/BXC,MAAQ,G,wEAEJ,OACI,6BACI,4BACI,4BACI,kBAAC,OAAD,CACIC,UAAU,OACVC,YAAY,SACZC,GAAG,SAHP,UAMJ,4BACI,kBAAC,OAAD,CACIF,UAAU,OACVC,YAAY,SACZC,GAAG,aAHP,cAMJ,4BACI,kBAAC,OAAD,CACIF,UAAU,OACVC,YAAY,SACZC,GAAG,WAHP,kB,GArBNC,cCmBHC,G,iNAnBXL,MAAQ,G,wEAEJ,OACI,yBAAKC,UAAU,WACX,yBAAKA,UAAU,eACX,8CAGA,yBAAKA,UAAU,aACX,8D,GAVLG,c,yBCDJ,EACH,mCADG,EAEN,iOCwBME,GDvBJC,I,2MCCPP,MAAQ,G,wEAEJ,OACI,yBAAKC,UAAU,SACX,yBAAKA,UAAU,aACX,6BACI,sCAEJ,6BACI,4BAAKO,GACL,yBAAKC,IAAKF,IAAMG,IAAI,SACpB,2BAAIF,GACJ,yBAAKP,UAAU,aAAf,8FAEA,4BAAQU,KAAK,iCAAiCC,KAAK,SAASC,MAAM,2BAAlE,oB,GAfJT,cCiBLU,G,iNAlBXd,MAAQ,G,wEAEJ,OACI,6BACI,yBAAKC,UAAU,WACX,uBAAGU,KAAMI,KAAKC,MAAMC,KAChB,yBAAKR,IAAKM,KAAKC,MAAME,IAAKR,IAAKK,KAAKC,MAAMG,SAE9C,4BAAKJ,KAAKC,MAAMG,OAChB,4BAAKJ,KAAKC,MAAMI,MAChB,2BAAIL,KAAKC,MAAMK,MACf,uBAAGV,KAAMI,KAAKC,MAAMM,MAApB,mB,GAZElB,cCFlB,GACImB,SAAU,CACN,CACIC,GAAI,EACJN,IAAK,KACLC,MAAO,GACPC,KAAM,GACNC,KAAM,GACNJ,IAAK,GACLK,KAAM,IAEV,CACIE,GAAI,EACJN,IAAK,KACLC,MAAO,GACPC,KAAM,GACNC,KAAM,GACNJ,IAAK,GACLK,KAAM,IAEV,CACIE,GAAI,EACJN,IAAK,KACLC,MAAO,GACPC,KAAM,GACNC,KAAM,GACNJ,IAAK,GACLK,KAAM,MCUPG,G,iNAhCXzB,MAAQ,G,wEAEJ,OACI,yBAAKC,UAAU,aACX,wBAAIA,UAAU,WAAd,aAGA,yBAAKA,UAAU,qBACVO,EAAKe,SAASG,KAAI,SAACC,GAAD,OACf,kBAAC,EAAD,CAASC,IAAKD,EAAQH,GAClBN,IAAKS,EAAQT,IACbC,MAAOQ,EAAQR,MACfC,KAAMO,EAAQP,KACdC,KAAMM,EAAQN,KACdJ,IAAKU,EAAQV,IACbK,KAAMK,EAAQL,WAG1B,wBAAIrB,UAAU,SACV,6DAIJ,yBAAKA,UAAU,YACX,uBAAGU,KAAK,oDAAoDV,UAAU,QAAtE,4B,GAzBIG,c,MCeTyB,MAXf,WACE,OACE,yBAAK5B,UAAU,OACb,kBAAC,EAAD,MACA,kBAAC,EAAD,MACA,kBAAC,EAAD,MACA,kBAAC,EAAD,QCHc6B,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2D,MCXNC,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,SD4H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,MAAK,SAAAC,GACjCA,EAAaC,kB","file":"static/js/main.a95d54a4.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/MyPic.2a881db1.jpg\";","import React, { Component } from 'react';\r\nimport { Link } from 'react-scroll';\r\nimport './Navbar.css';\r\n\r\nclass Nav extends Component {\r\n    state = {}\r\n    render() {\r\n        return (\r\n            <nav>\r\n                <ul>\r\n                    <li>\r\n                        <Link\r\n                            className='link'\r\n                            activeClass='active'\r\n                            to='about'>About\r\n                     </Link>\r\n                    </li>\r\n                    <li>\r\n                        <Link\r\n                            className='link'\r\n                            activeClass='active'\r\n                            to='portfolio'>Portfolio\r\n                     </Link>\r\n                    </li>\r\n                    <li>\r\n                        <Link\r\n                            className='link'\r\n                            activeClass='active'\r\n                            to='contact'>Contact\r\n                     </Link>\r\n                    </li>\r\n                </ul>\r\n            </nav>\r\n        )\r\n    }\r\n}\r\nexport default Nav;","import React, { Component } from 'react';\r\nimport './Main.css';\r\n\r\nclass Main extends Component {\r\n    state = {};\r\n    render() {\r\n        return (\r\n            <div className='landing'>\r\n                <div className='landingText'>\r\n                    <h1>\r\n                        Chris Boydstun\r\n                    </h1>\r\n                    <div className='minorText'>\r\n                        <p>\r\n                            Full Stack Web Developer\r\n                        </p>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Main;","import Self from './MyPic.jpg';\r\n\r\nexport default {\r\n    header: 'Hello! My name is Chris Boydstun',\r\n    bio: 'Front-end/Full Stack Web Developer with a passion for education and entrepeneurship. Graduate with a certificate in Full Stack Web Development from Lambda School with skills in JavaScript, React.js, Node.js, CSS, and HTML.',\r\n    image: Self\r\n}","import React, { Component } from 'react';\r\nimport './About.css'\r\nimport Self from './MyPic.jpg';\r\nimport Data from './Data.js';\r\n\r\nclass About extends Component {\r\n    state = {}\r\n    render() {\r\n        return (\r\n            <div className='about'>\r\n                <div className='aboutText'>\r\n                    <div>\r\n                        <h1>ABOUT</h1>\r\n                    </div>\r\n                    <div>\r\n                        <h3>{Data.header}</h3>\r\n                        <img src={Self} alt='Self'></img>\r\n                        <p>{Data.bio}</p>\r\n                        <div className='available'>\r\n                        It's my mission to use the power of the internet to help others learn all around the world.\r\n                        <button href=\"mailto:chrisboydstun@gmail.com\" type=\"button\" class=\"btn btn-outline-primary\">Email Me</button>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>);\r\n    }\r\n}\r\n\r\nexport default About;","import React, { Component } from 'react';\r\nimport './Project.css';\r\n\r\nclass Project extends Component {\r\n    state = {}\r\n    render() {\r\n        return (\r\n            <div>\r\n                <div className='project'>\r\n                    <a href={this.props.url}>\r\n                        <img src={this.props.img} alt={this.props.title}></img>\r\n                    </a>\r\n                    <h1>{this.props.title}</h1>\r\n                    <h4>{this.props.role}</h4>\r\n                    <p>{this.props.text}</p>\r\n                    <a href={this.props.link}>Live link</a>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Project;","export default\r\n    {\r\n        projects: [\r\n            {\r\n                id: 1,\r\n                img: null,\r\n                title: '',\r\n                role: '',\r\n                text: '',\r\n                url: '',\r\n                link: ''\r\n            },\r\n            {\r\n                id: 2,\r\n                img: null,\r\n                title: '',\r\n                role: '',\r\n                text: '',\r\n                url: '',\r\n                link: ''\r\n            },\r\n            {\r\n                id: 3,\r\n                img: null,\r\n                title: '',\r\n                role: '',\r\n                text: '',\r\n                url: '',\r\n                link: ''\r\n            }\r\n        ]\r\n    }","import React, { Component } from 'react';\r\nimport Project from '../Project/Project.js';\r\nimport Data from './Data.js';\r\nimport './Portfolio.css';\r\n\r\nclass Portfolio extends Component {\r\n    state = {}\r\n    render() {\r\n        return (\r\n            <div className='portfolio'>\r\n                <h1 className=\"heading\">\r\n                        PORTFOLIO\r\n        </h1>\r\n                <div className=\"portfolio-content\">\r\n                    {Data.projects.map((project) => (\r\n                        <Project key={project.id}\r\n                            img={project.img}\r\n                            title={project.title}\r\n                            role={project.role}\r\n                            text={project.text}\r\n                            url={project.url}\r\n                            link={project.link} />\r\n                    ))}\r\n                </div>\r\n                <h1 className='other'>\r\n                    <h3>\r\n                        Interested in my other work?\r\n                </h3>\r\n                </h1>\r\n                <div className='repo-btn'>\r\n                    <a href=\"https://www.github.com/cboydstun?tab=repositories\" className=\"bttn\">\r\n                        Other Repositories\r\n                        </a>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\nexport default Portfolio;","import React from 'react';\r\n\r\nimport Navbar from './components/Navbar/Navbar'\r\nimport Main from './components/Main/Main'\r\nimport About from './components/About/About'\r\nimport Portfolio from './components/Portfolio/Portfolio'\r\n\r\nimport './App.css';\r\n\r\nfunction App() {\r\n  return (\r\n    <div className=\"App\">\r\n      <Navbar />\r\n      <Main />\r\n      <About />\r\n      <Portfolio />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' }\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}